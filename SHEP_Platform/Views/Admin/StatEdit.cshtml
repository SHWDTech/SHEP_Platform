@using SHEP_Platform.Models.Admin
@model StatEditViewModel

@{
    ViewBag.Title = "系统管理";
}

<div style="position: relative;">
    <div style="width: 360px;">
        @using (Html.BeginForm("StatEdit", "Admin", new { ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-inline", role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Id)
            <div class="form-group">
                @Html.LabelFor(m => m.StatCode)
                @Html.TextBoxFor(m => m.StatCode, new { @class = "form-control", placeholder = "请输入监测点编码" })
            </div>
            @Html.ValidationMessageFor(m => m.StatCode, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.StatName)
                @Html.TextBoxFor(m => m.StatName, new { @class = "form-control", placeholder = "请输入监测点名称" })
            </div>
            @Html.ValidationMessageFor(m => m.StatName, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.ChargeMan)
                @Html.TextBoxFor(m => m.ChargeMan, new { @class = "form-control", placeholder = "请输入负责人" })
            </div>
            @Html.ValidationMessageFor(m => m.ChargeMan, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.Telepone)
                @Html.TextBoxFor(m => m.Telepone, new { @class = "form-control", placeholder = "请输入联系电话" })
            </div>
            @Html.ValidationMessageFor(m => m.Telepone, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.Department)
                @Html.TextBoxFor(m => m.Department, new { @class = "form-control", placeholder = "请输入施工单位" })
            </div>
            @Html.ValidationMessageFor(m => m.Department, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.Address)
                @Html.TextBoxFor(m => m.Address, new { @class = "form-control", placeholder = "请输入施工地址" })
            </div>
            @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.Street)
                @Html.TextBoxFor(m => m.Street, new { @class = "form-control", placeholder = "请输入所属街道" })
            </div>
            @Html.ValidationMessageFor(m => m.Street, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.Country)
                @Html.DropDownListFor(m => m.Country, Model.CountryList, new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(m => m.Country, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.Square)
                @Html.TextBoxFor(m => m.Square, new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(m => m.Square, "", new { @class = "text-danger" })
            <div class="form-group" style="position: relative;">
                @Html.LabelFor(m => m.ProStartTime)
                @Html.TextBoxFor(m => m.ProStartTime, new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(m => m.ProStartTime, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.Stage)
                @Html.DropDownListFor(m => m.Stage, Model.StageList, new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(m => m.Stage, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.Longitude)
                @Html.TextBoxFor(m => m.Longitude, new { @class = "form-control", placeholder = "请输入监测点编码" })
            </div>
            @Html.ValidationMessageFor(m => m.Longitude, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.Latitude)
                @Html.TextBoxFor(m => m.Latitude, new { @class = "form-control", placeholder = "请输入监测点编码" })
            </div>
            @Html.ValidationMessageFor(m => m.Latitude, "", new { @class = "text-danger" })
            <div class="form-group" style="width: 100%;">
                <p id="gpsResult"></p>
            </div>
            <div class="form-group">
                <a class="btn btn-primary" onclick="AddCoorinateTask()">校准工地位置</a>
                <button type="submit" class="btn btn-success">
                    提交
                </button>
            </div>
        }
    </div>
    <div id="mapContainer" style="position: absolute; top: 0; left: 360px; width: 900px; height: 640px;">

    </div>
</div>

@section css{
    @Styles.Render("~/Content/datetimepickercss")
    <style type="text/css">
        label {
            width: 100px;
        }

        .form-group {
            margin-bottom: 10px !important;
        }

        .form-control {
            -moz-min-width: 230px;
            -ms-min-width: 230px;
            -o-min-width: 230px;
            -webkit-min-width: 230px;
            min-width: 230px;
        }
    </style>
}

@section scripts{
    @Scripts.Render("~/bundles/datetimepicker")
    <script type="text/javascript" src="/Scripts/Common/MapManipulation.js"></script>
    <script type="text/javascript">
        var statId = @Model.Id;
        var IsNew = '@Model.IsNew' === 'True';
        var Longitude = @Model.Longitude;
        var Latitude = @Model.Latitude;
        $(function () {
            $('#ProStartTime').datetimepicker({
                locale: 'zh-cn',
                format: 'L'
            });

            containerName = 'mapContainer';
            centerPosition = IsNew ? '上海' : Longitude + ',' + Latitude;
            zoom = IsNew ? 12 : 20;
            var load = document.createElement("script");
            load.src = "http://api.map.baidu.com/api?v=1.4&callback=map_init(init_page)";
            document.body.appendChild(load);
        });

        var init_page = function () {
            if (!IsNew) {
                add_MapPoint({longitude:Longitude, latitude:Latitude}, PolluteStatus.NotOverRange, null);
            }

            map.addEventListener("click", function (e) {
                this.clearOverlays();
                this.closeInfoWindow();
                add_MapPoint({longitude:e.point.lng, latitude:e.point.lat}, PolluteStatus.NotOverRange, null);
                $('#Longitude').val(e.point.lng);
                $('#Latitude').val(e.point.lat);
            });
        };

        var maxtimeoutTimes;

        function AddCoorinateTask() {
            $.get("/CommandAjax/Access", {fun: 'addCoordinateTask', statId: statId}, function(ret) {
                if (ret.success) {
                    maxtimeoutTimes = 0;
                    chackResponse(ret.taskId);
                    $("#gpsResult").html("正在校正经纬度，请耐心等待！");
                } else {
                    $("#gpsResult").html("添加校正任务失败，请重试！");
                }
            });
        }

        function chackResponse(taskId) {
            $.get('/CommandAjax/Access',{fun: 'adjustingCoordinate', taskId: taskId}, function (ret) {
                if (ret.success) {
                    UpdateCoordinate(ret.coordinate);
                } else {
                    if (maxtimeoutTimes < 20) {
                        timeID = setTimeout(function() { chackResponse(taskId); }, 3000);
                    } else {
                        $("#gpsResult").html('操作超时！');
                    }
                }

            });
            maxtimeoutTimes++;
        };

        function UpdateCoordinate(obj) {
            if (obj.result === "failed") {
                $("#gpsResult").html("获取GPS信息失败，请重试！");
                return;
            }

            map.clearOverlays();
            map.closeInfoWindow();
            add_MapPoint({longitude:obj.longitude, latitude:obj.latitude}, PolluteStatus.NotOverRange, null);
            $('#Longitude').val(obj.longitude);
            $('#Latitude').val(obj.latitude);
            $("#gpsResult").html("经纬度校正成功！");
        }
    </script>
}